FROM centos:6

MAINTAINER inocop

WORKDIR /tmp


# add nodejs8.x repository
RUN curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -


# yum install 
RUN yum install -y sudo \
                   cronie \
                   which \
                   wget \
                   epel-release

RUN yum install -y httpd \
                   httpd-devel \
                   mod_xsendfile \
                   mod_ssl \
                   libcurl-devel \
                   apr-devel \
                   apr-util-devel \
                   gcc-c++ \
                   make \
                   glibc-headers \
                   openssl-devel \
                   readline \
                   readline-devel \
                   libyaml-devel \
                   libxml2-devel \
                   libxslt-devel \
                   zlib \
                   zlib-devel \
                   sqlite-devel \
                   mysql \
                   mysql-devel \
                   git \
                   nodejs \
                   gettext \
                   ImageMagick \
&&  yum clean all


# ruby install
RUN wget http://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.3.tar.gz \
&&  tar zxf ruby-2.5.3.tar.gz \
&&  cd ruby-2.5.3 \
&&  ./configure --disable-install-rdoc \
&&  make \
&&  make install \
&&  rm -rf /tmp/ruby-*

# passenger install
RUN bash -l -c 'gem install --no-document bundler -v "1.17.2"' \
&&  bash -l -c 'gem install --no-document passenger -v "5.3.7"' \
&&  bash -l -c 'gem install --no-document nokogiri -v "1.8.5"' \
&&  passenger-install-apache2-module --auto


# set TimeZone
RUN mv /etc/localtime /etc/localtime.org \
&&  cp /usr/share/zoneinfo/Japan /etc/localtime
RUN mv /etc/sysconfig/clock /etc/sysconfig/clock.org \
&&  echo 'ZONE="Asia/Tokyo"' >> /etc/sysconfig/clock \
&&  echo 'UTC=false"'        >> /etc/sysconfig/clock


# get build-arg
ARG RAILS_ENV

# set env for apache
RUN echo "RAILS_ENV=${RAILS_ENV}" >> /etc/sysconfig/httpd

# set conf for apache
ADD vhost.conf.tmp ./
RUN RAILS_ENV=${RAILS_ENV} cat vhost.conf.tmp | envsubst > /etc/httpd/conf.d/vhost.conf \
&&  sed -i -e "s/Require all granted/#&/" /etc/httpd/conf.d/vhost.conf


# install db tools for development
ADD install_adminer.sh ./
RUN if [ "${RAILS_ENV}" = "development" ] ; then ./install_adminer.sh ; fi


# Docker上のCentOS6でcrondを動かす用の設定
RUN sudo sed -i.bak -e 's/^\(session.*pam_loginuid.so\)$/#\1/' /etc/pam.d/crond

# set use service (rsyslog for crond)
RUN chkconfig httpd on \
&&  chkconfig rsyslog on \
&&  chkconfig crond on


# create user for passenger
RUN useradd railsdev \
&&  echo "railsdev:password" | chpasswd \
&&  usermod  -u 1000 railsdev \
&&  groupmod -g 1000 railsdev
RUN sed -i.org -e "s|secure_path =.*|&:/usr/local/bin|" /etc/sudoers \
&&  echo "railsdev ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers


CMD service httpd start \
&&  service rsyslog start \
&&  service crond start \
&&  cd /var/www/app/source/rails_app && bin/delayed_job \
&&  /usr/bin/tail -f /dev/null


USER railsdev
WORKDIR /var/www/app
