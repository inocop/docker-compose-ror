FROM centos:7

MAINTAINER inocop

WORKDIR /tmp


# add nodejs8.x repository
RUN curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -


# yum install 
RUN yum install -y sudo \
                   cronie \
                   which \
                   wget \
                   httpd \
                   httpd-devel \
                   libcurl-devel \
                   apr-devel \
                   apr-util-devel \
                   gcc-c++ \
                   make \
                   glibc-headers \
                   openssl-devel \
                   readline \
                   readline-devel \
                   libyaml-devel \
                   libxml2-devel \
                   libxslt-devel \
                   zlib \
                   zlib-devel \
                   sqlite-devel \
                   mysql \
                   mysql-devel \
                   git \
                   nodejs \
                   gettext


# ruby install
RUN wget http://cache.ruby-lang.org/pub/ruby/2.4/ruby-2.4.4.tar.gz \
&&  tar zxf ruby-2.4.4.tar.gz \
&&  cd ruby-2.4.4 \
&&  ./configure --disable-install-rdoc \
&&  make \
&&  make install


# passenger install
RUN bash -l -c 'gem install --no-document bundler' \
&&  bash -l -c 'gem install --no-document passenger -v "5.3.2"' \
&&  bash -l -c 'gem install --no-document nokogiri -- --use-system-libraries -v "1.8.3"' \
&&  passenger-install-apache2-module --auto


# apache disable PrivateTmp
RUN cp /usr/lib/systemd/system/httpd.service /etc/systemd/system/httpd.service \
&&  sed -i -e "s/PrivateTmp=true/PrivateTmp=false/g" /etc/systemd/system/httpd.service


# set TimeZone
RUN ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
#RUN timedatectl set-timezone Asia/Tokyo


# set environment
ARG RAILS_ENV
ADD web_vhost.conf.tmp ./
ADD .env ./

RUN RAILS_ENV=${RAILS_ENV} cat web_vhost.conf.tmp | envsubst > /etc/httpd/conf.d/web_vhost.conf \
&&  cat .env >> /etc/sysconfig/httpd \
&&  echo "export RAILS_ENV=${RAILS_ENV}" >> /etc/profile.d/rails_conf.sh


# install db tools for development
ADD web_install_adminer.sh ./
RUN if [ "${RAILS_ENV}" = "development" ] ; then ./web_install_adminer.sh ; fi


# set use systemd
RUN systemctl enable httpd.service \
&&  systemctl enable crond.service


# create user
RUN useradd -s /sbin/nologin railsdev \
&&  usermod  -u 1000 railsdev \
&&  groupmod -g 1000 railsdev


WORKDIR /var/rails_app


CMD /sbin/init
